<Application x:Class="SomewhereDesktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SomewhereDesktop"
             DispatcherUnhandledException="Application_DispatcherUnhandledException"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/generic.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        
        
        <!-- Solarized Color Style: https://ethanschoonover.com/solarized/ -->
        <SolidColorBrush x:Key="base03" Color="#002b36"/>
        <SolidColorBrush x:Key="base02" Color="#073642"/>
        <SolidColorBrush x:Key="base01" Color="#586e75"/>
        <SolidColorBrush x:Key="base00" Color="#657b83"/>
        <SolidColorBrush x:Key="base0" Color="#839496"/>
        <SolidColorBrush x:Key="base1" Color="#93a1a1"/>
        <SolidColorBrush x:Key="base2" Color="#eee8d5"/>
        <SolidColorBrush x:Key="base3" Color="#fdf6e3"/>
        <SolidColorBrush x:Key="yellow" Color="#b58900"/>
        <SolidColorBrush x:Key="orange" Color="#cb4b16"/>
        <SolidColorBrush x:Key="red" Color="#dc322f"/>
        <SolidColorBrush x:Key="magenta" Color="#d33682"/>
        <SolidColorBrush x:Key="violet" Color="#6c71c4"/>
        <SolidColorBrush x:Key="blue" Color="#268bd2"/>
        <SolidColorBrush x:Key="cyan" Color="#2aa198"/>
        <SolidColorBrush x:Key="green" Color="#859900"/>

        <!-- Custom Color Scheme -->
        <!-- Primary Color (Base) -->
        <SolidColorBrush x:Key="Base4" Color="#313B74"/>
        <SolidColorBrush x:Key="Base3" Color="#6D7EDD"/>
        <SolidColorBrush x:Key="Base2" Color="#4A58A2"/>
        <SolidColorBrush x:Key="Base1" Color="#1B2246"/>
        <SolidColorBrush x:Key="Base0" Color="#080B18"/>
        <!-- Secondary color 1 (Highlight) -->
        <SolidColorBrush x:Key="Highlight4" Color="#4C2D73"/>
        <SolidColorBrush x:Key="Highlight3" Color="#9B67DC"/>
        <SolidColorBrush x:Key="Highlight2" Color="#6D45A1"/>
        <SolidColorBrush x:Key="Highlight1" Color="#2C1846"/>
        <SolidColorBrush x:Key="Highlight0" Color="#0F0818"/>
        <!-- Secondary color 2 (Accent) -->
        <SolidColorBrush x:Key="Accent4" Color="#226666"/>
        <SolidColorBrush x:Key="Accent3" Color="#59D4D4"/>
        <SolidColorBrush x:Key="Accent2" Color="#358E8E"/>
        <SolidColorBrush x:Key="Accent1" Color="#123E3E"/>
        <SolidColorBrush x:Key="Accent0" Color="#051515"/>
        
        <!-- Tag Colors -->
        <SolidColorBrush x:Key="DefaultTagColor" Color="#EECC66"/>

        <!-- Window Control Elements -->
        <Style x:Key="ButtonBase" TargetType="Button">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Background" Value="{StaticResource Base0}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Base2}"/>
            <Setter Property="Foreground" Value="{StaticResource Accent2}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <!-- Disabled State Colors Override -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource Base4}"/>
                    <Setter Property="Foreground" Value="{StaticResource Base3}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Accent1}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource ButtonBase}">
        </Style>
        <Style x:Key="CommandButton" TargetType="Button" BasedOn="{StaticResource ButtonBase}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style x:Key="Panel" TargetType="Border">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Background" Value="{StaticResource Base0}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Base1}"/>
        </Style>
        <Style x:Key="TagButton" TargetType="Border">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource DefaultTagColor}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style x:Key="TagFilterButton" TargetType="Border" BasedOn="{StaticResource TagButton}">
            <Setter Property="Background" Value="{StaticResource Accent2}"/>
        </Style>
        <Style x:Key="KnowledgeRegionHighlight" TargetType="Border">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource Base1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Base0}"/>
        </Style>
        <Style TargetType="GridSplitter">
            <Setter Property="Width" Value="5"/>
            <Setter Property="Background" Value="{StaticResource Base1}"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="LabelBase" TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource Base2}"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="MinWidth" Value="85"/>
        </Style>
        <!-- Default Label Style -->
        <Style TargetType="Label" BasedOn="{StaticResource LabelBase}">
        </Style>
        <Style x:Key="AttributeField" TargetType="Label" BasedOn="{StaticResource LabelBase}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="Title" TargetType="Label" BasedOn="{StaticResource LabelBase}">
            <Setter Property="Foreground" Value="{StaticResource Base3}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Margin" Value="8"/>
        </Style>
        <Style x:Key="TitleDim" TargetType="Label" BasedOn="{StaticResource Title}">
            <!-- Explicitly set foreground here so we can trigger it in property -->
            <Setter Property="Foreground" Value="{StaticResource Base2}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource Base3}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Header" TargetType="Label" BasedOn="{StaticResource LabelBase}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style x:Key="Info" TargetType="Label" BasedOn="{StaticResource LabelBase}">
            <Setter Property="Foreground" Value="{StaticResource Highlight2}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style x:Key="KnowledgeRegionMark" TargetType="Label" BasedOn="{StaticResource LabelBase}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="MinWidth" Value="85"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <RotateTransform Angle="-90"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListView">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="MinWidth" Value="200"/>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" 
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Color for hover selection -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{StaticResource Accent2}"/>
                    <Setter Property="Background" Value="{StaticResource Accent0}" />
                </MultiTrigger>
                <!-- Color for selected -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{StaticResource Accent2}"/>
                    <Setter Property="Background" Value="{StaticResource Accent0}" />
                </MultiTrigger>
                <!-- Color for hovering -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{StaticResource Accent2}"/>
                    <Setter Property="Background" Value="{StaticResource Accent0}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="WrapListItem" TargetType="ListViewItem">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" 
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Color for hover selection -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="BorderBrush" Value="{StaticResource Accent2}"/>
                    <Setter Property="Background" Value="{StaticResource Accent0}" />
                </MultiTrigger>
                <!-- Color for selected -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="BorderBrush" Value="{StaticResource Accent2}"/>
                    <Setter Property="Background" Value="{StaticResource Accent0}" />
                </MultiTrigger>
                <!-- Color for hovering -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="BorderBrush" Value="{StaticResource Accent2}"/>
                    <Setter Property="Background" Value="{StaticResource Accent0}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="WrapList" TargetType="ListView">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="MaxHeight" Value="450"/>
            <!-- Don't show horizontal scrollbar and force wrapping -->
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{StaticResource WrapListItem}"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Accent3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Base3}"/>
            <Setter Property="CaretBrush" Value="{StaticResource Accent2}"/>
        </Style>
        <Style x:Key="Content" TargetType="TextBox">
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Accent3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Base3}"/>
            <Setter Property="CaretBrush" Value="{StaticResource Accent2}"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="AcceptsTab" Value="True"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        </Style>

        <!-- Lengthy Combobox Styling ... -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" 
                        Background="{StaticResource Base1}" BorderBrush="{StaticResource Base2}"
                        BorderThickness="1" />
                <Border Grid.Column="0" CornerRadius="0" Margin="1" 
                        Background="{StaticResource Base0}" BorderBrush="{StaticResource Base2}"
                        BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource Base3}" 
                      HorizontalAlignment="Center" VerticalAlignment="Center"
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="{StaticResource Base3}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" 
                                          Grid.Column="2" Focusable="false" ClickMode="Press"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" 
                                     Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                     VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="#FF3F3F3F" Foreground="Green"
                                     Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" 
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{StaticResource Base0}" 
                                            BorderThickness="1" BorderBrush="{StaticResource Base1}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="{StaticResource Base3}"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Base2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
